@model FypProject.Models.More

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
<section class="section pagegrey">
    <div class="container">
        <div class="title-area text-center">
            <h2>Upload New Item <small>Please complete all fields listed below.</small></h2>
            <div class="bread">
                <ol class="breadcrumb">
                    <li><a href="#">Home</a></li>
                    <li class="active">Upload</li>
                </ol>
            </div><!-- end bread -->
        </div><!-- /.pull-right -->
    </div><!-- end container -->
</section>
<section class="section">
    <div class="container">
        <div class="content">
            <div class="col-md-12 col-sm-12">
                <div class="row">
                    <h2>Upload Item</h2>


                    @using (Html.BeginForm("Create", "Mores", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h3>Other Items</h3>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.ItemLevel, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EnumDropDownListFor(model => model.ItemLevel, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ItemLevel, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EnumDropDownListFor(model => model.Category, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })

                                <div class="col-md-10">

                                    <input type="file" name="file" />

                                    @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input type="file" name="doc" />
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Files, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">

                                    <input type="file" name="Files" id="Files" multiple />

                                    @Html.ValidationMessageFor(model => model.Files, "", new { @class = "text-danger" })
                                </div>

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.CompatibleBrowsers, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="form-control" style="height: 140px; overflow: auto; width:260px;">
                                    @foreach (var names in @Model.CompatibleBrowsers)
                                    {

                                        var checkBoxId = "chk" + names.Value;
                                        var tdId = "td" + names.Value;
                                        <table width="100">
                                            <tr>
                                                <td width="20px">
                                                    <input type="checkbox" id="@checkBoxId" value="@names.Value" />
                                                </td>
                                                <td id="@tdId" width="100px">
                                                    @names.Text
                                                </td>
                                            </tr>

                                        </table>

                                    }
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Layered, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.RadioButtonFor(model => model.Layered, "Yes") Yes
                                    @Html.RadioButtonFor(model => model.Layered, "No") No
                                    @Html.RadioButtonFor(model => model.Layered, "NA") N/A
                                    @Html.ValidationMessageFor(model => model.Layered, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Layout, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EnumDropDownListFor(model => model.Layout, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Layout, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.HighResolution, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.RadioButtonFor(model => model.HighResolution, "Yes") Yes
                                    @Html.RadioButtonFor(model => model.HighResolution, "No") No
                                    @Html.RadioButtonFor(model => model.HighResolution, "NA") N/A
                                    @Html.ValidationMessageFor(model => model.HighResolution, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LiveDemo, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.LiveDemo, new { htmlAttributes = new { @class = "form-control", placeholder = "DemoUrl/VideoLink" } })
                                    @Html.ValidationMessageFor(model => model.LiveDemo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Tags, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Comment, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.License, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.License)   I Accept the License Agreement
                                        @Html.ValidationMessageFor(model => model.License, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Upload" class="btn btn-primary btn-file" />
                                </div>
                            </div>
                        </div>

                    }
                </div>
            </div>
        </div>
        <hr class="largehr">
    </div>
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
